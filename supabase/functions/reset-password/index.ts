import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { createClient } from "https://esm.sh/@supabase/supabase-js@2";

serve(async (req) => {
  try {
    // T·∫°o Supabase client v·ªõi service_role key ƒë·ªÉ c√≥ to√†n quy·ªÅn
    const supabase = createClient(
      Deno.env.get("SUPABASE_URL")!,
      Deno.env.get("SUPABASE_SERVICE_ROLE_KEY")!
    );

    // 1. T·∫°o m·∫≠t kh·∫©u ng·∫´u nhi√™n (6 s·ªë)
    const newPassword = Math.floor(100000 + Math.random() * 900000).toString();

    // 2. C·∫≠p nh·∫≠t m·∫≠t kh·∫©u m·ªõi v√†o database
    const { error: dbError } = await supabase
      .from("system_config")
      .update({ value: newPassword })
      .eq("key", "current_password");

    if (dbError) throw dbError;

    // 3. G·ª≠i th√¥ng b√°o ƒë·∫øn Discord
    const discordWebhookUrl = Deno.env.get("DISCORD_WEBHOOK_URL")!;
    const content = `üîë M·∫≠t kh·∫©u l√†m b√†i m·ªõi h√¥m nay l√†: **${newPassword}**`;

    await fetch(discordWebhookUrl, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ content: content }),
    });

    return new Response("Password reset successfully!", { status: 200 });
  } catch (error) {
    return new Response(`Error: ${error.message}`, { status: 500 });
  }
});
